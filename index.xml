<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>EMBA BEYOND</title><link>https://www.securefirmware.de/</link><description>Recent content on EMBA BEYOND</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 07 Nov 2023 09:53:24 +0100</lastBuildDate><atom:link href="https://www.securefirmware.de/index.xml" rel="self" type="application/rss+xml"/><item><title>EMBA version 1.3.1 is out now</title><link>https://www.securefirmware.de/posts/version_131/</link><pubDate>Tue, 07 Nov 2023 09:53:24 +0100</pubDate><guid>https://www.securefirmware.de/posts/version_131/</guid><description>What happened since the last EMBA release?
There was the absolute great #Hackersummercamp with our talks at BSidesLV, ICS Village (DEF CON) and Black Hat (Arsenal). The recording of the BSides talk is already available here. Beside this, Nate did a really great talk at BruCON – see here.
Beside a lot of code cleanup, bug fixing and some little improvements the new firmware diffing mode is one of the highlights in version 1.</description></item><item><title>AI supported firmware analysis</title><link>https://www.securefirmware.de/posts/ai_powered_firmware_analysis/</link><pubDate>Tue, 07 Nov 2023 09:50:18 +0100</pubDate><guid>https://www.securefirmware.de/posts/ai_powered_firmware_analysis/</guid><description>EMBA - The AI powered firmware security analyzer Why not use AI for firmware analysis? This is the idea we had since the public release of OpenAI&amp;rsquo;s GPT-3 and GPT-4 earlier this year.
We started testing OpenAI&amp;rsquo;s ChatGPT for different possible usage scenarios like the integration of further CVE explanation:
Additionally, we thought about a quick lookup for potential exploit code or POC’s:
It can be seen that the available information is quite limited because of the limited dataset for these types of requests.</description></item><item><title>EMBA version 1.1.2 is out now</title><link>https://www.securefirmware.de/posts/version_112_knightrider/</link><pubDate>Thu, 06 Oct 2022 13:37:00 +0200</pubDate><guid>https://www.securefirmware.de/posts/version_112_knightrider/</guid><description>Bonnie: I have a new feature integrated into K.I.T.T. Michael: Give me more details K.I.T.T.: With my new friend EMBA I am able to find the weak spot in every firmware.
40 years later &amp;hellip; K.I.T.T. is definitive able to analyze firmware with EMBA
Beside bug fixes this release introduces many new features. Since version 1.1.1 we introduced several new features and multiple improved areas:
Thx to @nuschpl the Installer supports non-english systems (see https://github.</description></item><item><title>EMBA version 1.1.0 is out now</title><link>https://www.securefirmware.de/posts/version_110/</link><pubDate>Mon, 01 Aug 2022 13:37:00 +0200</pubDate><guid>https://www.securefirmware.de/posts/version_110/</guid><description>In August 2020 we released EMBA to the world. 21 months or 1600 commits later version 1.0.0 was available. 1856 commits later version 1.1.0 with a huge amount of improvements and new features was released.
Just to give you a feeling of how massive this update is Initial release had around 3400 lines of code Version 1.0.0 had around 12000 lines of code And now, Version 1.1.0 has more than 20000 lines of code New system-mode emulation environment We have replaced the old system-mode emulation modules completely with a new and improved environment.</description></item><item><title>EMBA goes to Vegas baby</title><link>https://www.securefirmware.de/posts/lasvegas_intro_2022/</link><pubDate>Thu, 21 Jul 2022 09:04:51 +0200</pubDate><guid>https://www.securefirmware.de/posts/lasvegas_intro_2022/</guid><description>It’s official, in August Pascal and myself will present the firmware security analyzer EMBA at Black Hat and DEF CON in Las Vegas. We are super excited and happy to have the possibility to show you the best firmware scanner on the best stage! As this is not enough, we are planning to release a huge update for EMBA &amp;hellip; stay tuned
You can find further details at the Black Hat USA Arsenal page and the DEF CON 30 forum</description></item><item><title>EMBA Version 1.0.0 is out now</title><link>https://www.securefirmware.de/posts/version100/</link><pubDate>Wed, 18 May 2022 09:45:39 +0200</pubDate><guid>https://www.securefirmware.de/posts/version100/</guid><description>In August 2020 we released EMBA to the world. 21 months or 1600 commits later version 1.0.0 is available.
We are very proud of this release and we want to highlight some details in the form of &amp;ldquo;How it started&amp;rdquo; vs. &amp;ldquo;How is it going&amp;rdquo;.
Included modules In August 2020 we started with 26 EMBA modules. Today EMBA has around 60 public modules.
Lines of Code In August 2020 EMBA was already quite big with ~3400 lines of code.</description></item><item><title>Join us at Black Hat Asia</title><link>https://www.securefirmware.de/posts/emba_black_hat_asia_arsenal_2022/</link><pubDate>Sat, 07 May 2022 12:38:59 +0200</pubDate><guid>https://www.securefirmware.de/posts/emba_black_hat_asia_arsenal_2022/</guid><description>You can attend the Black Hat Business Hall for free - check it out and join our talk on firmware analysis with EMBA here.</description></item><item><title>EMBA v0.9.0 - Munich Edt released</title><link>https://www.securefirmware.de/posts/munich-edt/</link><pubDate>Thu, 17 Mar 2022 12:55:51 +0100</pubDate><guid>https://www.securefirmware.de/posts/munich-edt/</guid><description>After around 1 and a half year of continuous development (and 1500 commits) we have decided to create our first official EMBA release.
Welcome EMBA v0.9.0 - Munich Edt.
Let&amp;rsquo;s celebrate our initial release!
Keep on using EMBA and improve firmware security!</description></item><item><title>Black Hat Asia with EMBA</title><link>https://www.securefirmware.de/posts/blackhat_asia_arsenal_2022/</link><pubDate>Wed, 16 Mar 2022 12:07:16 +0100</pubDate><guid>https://www.securefirmware.de/posts/blackhat_asia_arsenal_2022/</guid><description>It’s official, in May Pascal and myself will present EMBA the firmware security scanner at Black Hat ASIA 2022. We are super excited and happy to have the possibility to show you the best firmware scanner on the best stage!
You can find further details at the Black Hat Asia Arsenal page.</description></item><item><title>QNAP firmware extractor module - from 0 to full firmware analysis</title><link>https://www.securefirmware.de/posts/qnap_decryptor/</link><pubDate>Tue, 08 Feb 2022 09:50:53 +0100</pubDate><guid>https://www.securefirmware.de/posts/qnap_decryptor/</guid><description>On one of our last penetration tests we had a QNAP device in front of us. While we started investigating the device via the network, we also wanted to use our firmware scanner EMBA for the automated firmware analysis tasks. The firmware was available from the QNAP download site and starting EMBA with the default profile looks like a quick win. After a while we realised that EMBA was running into the deep-extraction mode and finally failed extracting the needed firmware.</description></item><item><title>EMBArk - the enterprise ready firmware scanning environment</title><link>https://www.securefirmware.de/posts/embark_intro/</link><pubDate>Tue, 01 Feb 2022 08:03:48 +0100</pubDate><guid>https://www.securefirmware.de/posts/embark_intro/</guid><description>EMBA is a command line tool only, which is primarly designed for penetration testers. In contradiction to this, EMBArk is the enterprise ready front-end wich uses EMBA as scanning back end. EMBArk is a Django based web front end which allows the management of the firmware scanning environment on one central system. Via EMBArk it is possible for multiple users (e.g. a pentesting or dev team) to access the scanner and initiate scan tasks via the web browser.</description></item><item><title>Reporting improvements for EMBA</title><link>https://www.securefirmware.de/posts/reporting_templates/</link><pubDate>Thu, 27 Jan 2022 10:04:00 +0100</pubDate><guid>https://www.securefirmware.de/posts/reporting_templates/</guid><description>We have included a template mechanism for creating better and more customised reports in EMBA. Now it is possible to place plain text template files or shell scripts to the EMBA directory ./report_templates. The naming of the files is quite strict. This means for the module P11_dlink_SHRS_enc_extract.sh a reporting template with the name P11_dlink_SHRS_enc_extract-post.sh or P11_dlink_SHRS_enc_extract-post.txt is used. The ending -pre is used for details printed at the beginning of the module, -post includes details shown at the end of the module.</description></item><item><title>Hello World from EMBA</title><link>https://www.securefirmware.de/posts/hello_world/</link><pubDate>Mon, 24 Jan 2022 12:35:49 +0100</pubDate><guid>https://www.securefirmware.de/posts/hello_world/</guid><description>Here is the EMBA team with a brand new blog around EMBA and EMBArk the firmware scanning environment.
In the near future you will find some blog posts on things we are working on and firmware security scanning in general. For now enjoy the EMBA video.
stay tuned &amp;hellip;</description></item><item><title>EMBArk wiki content</title><link>https://www.securefirmware.de/wiki/embark/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.securefirmware.de/wiki/embark/</guid><description>hello world
embark</description></item><item><title>OS-support.md</title><link>https://www.securefirmware.de/wiki/emba/os-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.securefirmware.de/wiki/emba/os-support/</guid><description>Back to wiki menu
EMBA is able to analyze different operating systems. The main focus is on Linux-based operating systems. Although EMBA is also able to identify and analyze the following operating systems:
multiple Linux-based operating systems FreeBSD VxWorks FreeRTOS eCos yC/OS Adonis Siprotec (based on VxWorks) QNX and others Back to wiki menu</description></item><item><title>OS-Support.md</title><link>https://www.securefirmware.de/wiki/embark/os-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.securefirmware.de/wiki/embark/os-support/</guid><description>Back to wiki menu
EMBArk is able to analyze different operating systems. The main focus is on Linux-based operating systems. Although EMBArk is also able to analyze the following operating systems:
multiple Linux-based operating systems FreeBSD VxWorks FreeRTOS eCos yC/OS Adonis Siprotec (based on VxWorks) and others Back to wiki menu</description></item><item><title>Overview emba Wiki</title><link>https://www.securefirmware.de/wiki/emba/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.securefirmware.de/wiki/emba/</guid><description>hello world
see here emba wiki content</description></item><item><title>Overview Wiki</title><link>https://www.securefirmware.de/wiki/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.securefirmware.de/wiki/</guid><description>hello world
see here both wikis with their respective logos</description></item><item><title>Referring-sites.md</title><link>https://www.securefirmware.de/wiki/emba/referring-sites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.securefirmware.de/wiki/emba/referring-sites/</guid><description>Back to wiki menu
https://www.kitploit.com/2021/01/emba-analyzer-for-linux-based-firmware.html https://securityonline.info/emba-analyzer-for-linux-based-firmware-of-embedded-devices/ https://cert.bournemouth.ac.uk/emba-an-analyzer-for-linux-based-firmware-of-embedded-devices/ https://p4cx.medium.com/emba-b370ce503602 https://www.libhunt.com/t/embedded-linux https://www.youtube.com/watch?v=8FeSpuRXvYA https://github.com/fkie-cad/awesome-embedded-and-iot-security https://project-awesome.org/fkie-cad/awesome-embedded-and-iot-security https://pythonawesome.com/embark-the-firmware-security-scanning-environment/ https://github.com/V33RU/IoTSecurity101#Pentesting-Firmwares-and-emulating-and-analyzing Back to wiki menu</description></item><item><title>Systemmode-Emulator.md</title><link>https://www.securefirmware.de/wiki/emba/systemmode-emulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.securefirmware.de/wiki/emba/systemmode-emulator/</guid><description>Back to wiki menu
Warning: Currently this is an experimental module, and you need to activate it manually with the -Q switch. ~Additionally it is only supported in developer mode (-D switch).~
Warning: EMBA needs root privileges for running in emulation mode.
Idea and history Starting with this Pull request EMBA got basic integration of the great firmadyne framework.
Firmware running in system mode emulation The following firmware images are tested in EMBA with full system emulation.</description></item><item><title>Usage.md</title><link>https://www.securefirmware.de/wiki/emba/usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.securefirmware.de/wiki/emba/usage/</guid><description>Back to wiki menu
Classic Before running EMBA make sure that you have installed all dependencies.
Static firmware testing Execute EMBA with set parameters, e.g. sudo ./emba.sh -l ./log -f ./firmware Path for logs and firmware path are necessary for testing a firmware image. You can specify multiple arguments. Test kernel config Test only a kernel configuration with the kernel checker of checksec: sudo ./emba.sh -l ./logs/kernel_conf -k ./kernel.config If you add -f .</description></item><item><title>Usermode-Emulator.md</title><link>https://www.securefirmware.de/wiki/emba/usermode-emulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.securefirmware.de/wiki/emba/usermode-emulator/</guid><description>Back to wiki menu
Warning: Currently this is an experimental module, and you need to activate it manually with the -E switch.
Warning: EMBA needs root privileges for running in emulation mode.
The idea behind the emulator is to run the identified binaries with different command line options like -V, -v, --version, --help in a simple chroot environment. After the identification of the binary architecture, it is possible to choose the correct qemu emulator.</description></item></channel></rss>